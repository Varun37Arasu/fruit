{"ast":null,"code":"var _jsxFileName = \"D:\\\\6th sem PW4\\\\pw6\\\\frontend\\\\src\\\\pages\\\\Results.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import Heading from \"../Components/Heading\";\n// import { LeftLeaves, RightLeaves } from \"../Components/Leaves\";\n// import { fruitsInfo } from \"../Components/dataJSON/fruitsInfo\";\n\n// const Results = ({ fruitname, img }) => {\n//   const [fruitDetail, setFruitDetail] = useState(\"\");\n\n//   useEffect(() => {\n//     const fruit = fruitsInfo.find((fruit) => fruit.fruitName === fruitname);\n\n//     if (fruit) {\n//       setFruitDetail(fruit);\n//       console.log(\"fruit : \", fruit);\n//     }\n//   }, []);\n//   console.log(\"fruit detail : \", fruitDetail);\n//   console.log(\"fruitname : \", fruitname);\n\n//   const [imageUrl, setImageUrl] = useState(\"\");\n\n//   useEffect(() => {\n//     fetchImage();\n//   }, []);\n\n//   const fetchImage = () => {\n//     fetch(\"http://localhost:5000/images\") // Replace with your Flask backend URL\n//       .then((response) => response.json())\n//       .then((data) => setImageUrl(data.image_url))\n//       .catch((error) => console.error(error));\n//   };\n\n//   console.log(\"imgurl res : \", imageUrl);\n\n//   return (\n//     <>\n//       <div className=\"content\">\n//         <LeftLeaves count={3} />\n//         <div className=\"resultContainer\">\n//           <Heading title=\"Results\" />\n//           <div className=\"resultBox\">\n//             <div className=\"upperPart\">\n//               <img\n//                 className=\"fruitimg\"\n//                 src={`uploads/${imageUrl}`}\n//                 alt=\"Recent Processed Image\"\n//               />\n//               <div className=\"generalInfo\">\n//                 <h2 className=\"points\">\n//                   Name :\n//                   <span className=\"fruitDetail\"> {fruitDetail.fruitName}</span>\n//                 </h2>\n//                 <h2 className=\"points\">\n//                   Binomial name :\n//                   <span className=\"fruitDetail\">\n//                     {fruitDetail.Binomial_Name}\n//                   </span>\n//                 </h2>\n//                 <h2 className=\"points\">\n//                   Genus :\n//                   <span className=\"fruitDetail\"> {fruitDetail.genus} </span>\n//                 </h2>\n//                 <h2 className=\"points\">\n//                   Family :\n//                   <span className=\"fruitDetail\"> {fruitDetail.family} </span>\n//                 </h2>\n//                 <h2 className=\"points\">\n//                   Origin :\n//                   <span className=\"fruitDetail\"> {fruitDetail.origin} </span>\n//                 </h2>\n//                 <h2 className=\"points\">\n//                   Category :\n//                   <span className=\"fruitDetail\"> {fruitDetail.fruitType} </span>\n//                 </h2>\n//               </div>\n//             </div>\n//             <div className=\"lineDivider\"></div>\n\n//             <div className=\"lowerPart\">\n//               <h2 className=\"points\">\n//                 Description :\n//                 <span className=\"fruitDetail\"> {fruitDetail.description}</span>\n//               </h2>\n//               <h2 className=\"points\">\n//                 Nutritional Information :\n//                 <span className=\"fruitDetail\">\n//                   <div className=\"nutrition\">\n//                     <div className=\"column\">\n//                       {fruitDetail?.nutritional_information &&\n//                         Object.entries(fruitDetail.nutritional_information)\n//                           .slice(\n//                             0,\n//                             Math.ceil(\n//                               Object.keys(fruitDetail.nutritional_information)\n//                                 .length / 2\n//                             )\n//                           )\n//                           .map(([key, value]) => (\n//                             <p key={key}>\n//                               {key}: {value}\n//                             </p>\n//                           ))}\n//                     </div>\n//                     <div className=\"column\">\n//                       {fruitDetail?.nutritional_information &&\n//                         Object.entries(fruitDetail.nutritional_information)\n//                           .slice(\n//                             Math.ceil(\n//                               Object.keys(fruitDetail.nutritional_information)\n//                                 .length / 2\n//                             )\n//                           )\n//                           .map(([key, value]) => (\n//                             <p key={key}>\n//                               {key}: {value}\n//                             </p>\n//                           ))}\n//                     </div>\n//                   </div>\n//                 </span>{\" \"}\n//               </h2>\n//               <h2 className=\"points\">\n//                 Health Benefits :\n//                 <span className=\"fruitDetail\">\n//                   {fruitDetail?.health_benefits &&\n//                     fruitDetail.health_benefits.map((health) => (\n//                       <p className=\"listvalues\">{health}</p>\n//                     ))}\n//                 </span>\n//               </h2>\n//               <h2 className=\"points\">\n//                 Seasonality :\n//                 <span className=\"fruitDetail\"> {fruitDetail.seasonality} </span>\n//               </h2>\n//               <h2 className=\"points\">\n//                 Allergenicity :\n//                 <span className=\"fruitDetail\">{fruitDetail.allergenicity}</span>\n//               </h2>\n//               <h2 className=\"points\">\n//                 Current price :\n//                 <span className=\"fruitDetail\"> {fruitDetail.price} </span>\n//               </h2>\n//             </div>\n//           </div>\n//         </div>\n//         <RightLeaves count={3} />\n//       </div>\n//     </>\n//   );\n// };\n\n// export default Results;\n\nimport React, { useState, useEffect } from \"react\";\nimport Heading from \"../Components/Heading\";\nimport { LeftLeaves, RightLeaves } from \"../Components/Leaves\";\nimport { fruitsInfo } from \"../Components/dataJSON/fruitsInfo\";\nimport { useLocation } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Results = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const fruitname = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.fruitname) || \"\";\n  const [fruitDetail, setFruitDetail] = useState(\"\");\n  useEffect(() => {\n    const fruit = fruitsInfo.find(fruit => fruit.fruitName === fruitname);\n    if (fruit) {\n      setFruitDetail(fruit);\n      console.log(\"fruit : \", fruit);\n    }\n  }, [fruitname]);\n  console.log(\"fruit detail : \", fruitDetail);\n  console.log(\"fruitname : \", fruitname);\n  const [imageUrl, setImageUrl] = useState(\"\");\n  useEffect(() => {\n    fetchImage();\n\n    // Attach event listener for beforeunload event\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n\n    // Clean up the event listener when component unmounts\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, []);\n  const handleBeforeUnload = async () => {\n    // Make a request to clear the uploads folder\n    try {\n      await fetch(\"http://localhost:5000/clear-uploads-folder\", {\n        method: \"POST\"\n      });\n      console.log(\"Uploads folder cleared successfully.\");\n    } catch (error) {\n      console.error(\"Failed to clear uploads folder:\", error);\n    }\n  };\n  const fetchImage = () => {\n    fetch(\"http://localhost:5000/images\") // Replace with your Flask backend URL\n    .then(response => response.json()).then(data => setImageUrl(data.image_url)).catch(error => console.error(error));\n  };\n  console.log(\"imgurl res : \", imageUrl);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(LeftLeaves, {\n        count: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resultContainer\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          title: \"Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resultBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upperPart\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"fruitimg\",\n              src: `uploads/${imageUrl}`,\n              alt: \"Recent Processed Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"generalInfo\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"points\",\n                children: [\"Name :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"fruitDetail\",\n                  children: [\" \", fruitDetail.fruitName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"points\",\n                children: [\"Binomial name :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"fruitDetail\",\n                  children: fruitDetail.Binomial_Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"points\",\n                children: [\"Genus :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"fruitDetail\",\n                  children: [\" \", fruitDetail.genus, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"points\",\n                children: [\"Family :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"fruitDetail\",\n                  children: [\" \", fruitDetail.family, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"points\",\n                children: [\"Origin :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"fruitDetail\",\n                  children: [\" \", fruitDetail.origin, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"points\",\n                children: [\"Category :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"fruitDetail\",\n                  children: [\" \", fruitDetail.fruitType, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lineDivider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lowerPart\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"points\",\n              children: [\"Description :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fruitDetail\",\n                children: [\" \", fruitDetail.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"points\",\n              children: [\"Nutritional Information :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fruitDetail\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"nutrition\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"column\",\n                    children: (fruitDetail === null || fruitDetail === void 0 ? void 0 : fruitDetail.nutritional_information) && Object.entries(fruitDetail.nutritional_information).slice(0, Math.ceil(Object.keys(fruitDetail.nutritional_information).length / 2)).map(_ref => {\n                      let [key, value] = _ref;\n                      return /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [key, \": \", value]\n                      }, key, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 275,\n                        columnNumber: 33\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"column\",\n                    children: (fruitDetail === null || fruitDetail === void 0 ? void 0 : fruitDetail.nutritional_information) && Object.entries(fruitDetail.nutritional_information).slice(Math.ceil(Object.keys(fruitDetail.nutritional_information).length / 2)).map(_ref2 => {\n                      let [key, value] = _ref2;\n                      return /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [key, \": \", value]\n                      }, key, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 290,\n                        columnNumber: 33\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"points\",\n              children: [\"Health Benefits :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fruitDetail\",\n                children: (fruitDetail === null || fruitDetail === void 0 ? void 0 : fruitDetail.health_benefits) && fruitDetail.health_benefits.map(health => /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"listvalues\",\n                  children: health\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"points\",\n              children: [\"Seasonality :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fruitDetail\",\n                children: [\" \", fruitDetail.seasonality, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"points\",\n              children: [\"Allergenicity :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fruitDetail\",\n                children: fruitDetail.allergenicity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"points\",\n              children: [\"Current price :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fruitDetail\",\n                children: [\" \", fruitDetail.price, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RightLeaves, {\n        count: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n_s(Results, \"LADcfGlOd3ynF/57iqV+2x0Dou0=\", false, function () {\n  return [useLocation];\n});\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useState","useEffect","Heading","LeftLeaves","RightLeaves","fruitsInfo","useLocation","Results","location","fruitname","state","fruitDetail","setFruitDetail","fruit","find","fruitName","console","log","imageUrl","setImageUrl","fetchImage","window","addEventListener","handleBeforeUnload","removeEventListener","fetch","method","error","then","response","json","data","image_url","catch","Binomial_Name","genus","family","origin","fruitType","description","nutritional_information","Object","entries","slice","Math","ceil","keys","length","map","key","value","health_benefits","health","seasonality","allergenicity","price"],"sources":["D:/6th sem PW4/pw6/frontend/src/pages/Results.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import Heading from \"../Components/Heading\";\r\n// import { LeftLeaves, RightLeaves } from \"../Components/Leaves\";\r\n// import { fruitsInfo } from \"../Components/dataJSON/fruitsInfo\";\r\n\r\n// const Results = ({ fruitname, img }) => {\r\n//   const [fruitDetail, setFruitDetail] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     const fruit = fruitsInfo.find((fruit) => fruit.fruitName === fruitname);\r\n\r\n//     if (fruit) {\r\n//       setFruitDetail(fruit);\r\n//       console.log(\"fruit : \", fruit);\r\n//     }\r\n//   }, []);\r\n//   console.log(\"fruit detail : \", fruitDetail);\r\n//   console.log(\"fruitname : \", fruitname);\r\n\r\n//   const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     fetchImage();\r\n//   }, []);\r\n\r\n//   const fetchImage = () => {\r\n//     fetch(\"http://localhost:5000/images\") // Replace with your Flask backend URL\r\n//       .then((response) => response.json())\r\n//       .then((data) => setImageUrl(data.image_url))\r\n//       .catch((error) => console.error(error));\r\n//   };\r\n\r\n//   console.log(\"imgurl res : \", imageUrl);\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"content\">\r\n//         <LeftLeaves count={3} />\r\n//         <div className=\"resultContainer\">\r\n//           <Heading title=\"Results\" />\r\n//           <div className=\"resultBox\">\r\n//             <div className=\"upperPart\">\r\n//               <img\r\n//                 className=\"fruitimg\"\r\n//                 src={`uploads/${imageUrl}`}\r\n//                 alt=\"Recent Processed Image\"\r\n//               />\r\n//               <div className=\"generalInfo\">\r\n//                 <h2 className=\"points\">\r\n//                   Name :\r\n//                   <span className=\"fruitDetail\"> {fruitDetail.fruitName}</span>\r\n//                 </h2>\r\n//                 <h2 className=\"points\">\r\n//                   Binomial name :\r\n//                   <span className=\"fruitDetail\">\r\n//                     {fruitDetail.Binomial_Name}\r\n//                   </span>\r\n//                 </h2>\r\n//                 <h2 className=\"points\">\r\n//                   Genus :\r\n//                   <span className=\"fruitDetail\"> {fruitDetail.genus} </span>\r\n//                 </h2>\r\n//                 <h2 className=\"points\">\r\n//                   Family :\r\n//                   <span className=\"fruitDetail\"> {fruitDetail.family} </span>\r\n//                 </h2>\r\n//                 <h2 className=\"points\">\r\n//                   Origin :\r\n//                   <span className=\"fruitDetail\"> {fruitDetail.origin} </span>\r\n//                 </h2>\r\n//                 <h2 className=\"points\">\r\n//                   Category :\r\n//                   <span className=\"fruitDetail\"> {fruitDetail.fruitType} </span>\r\n//                 </h2>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"lineDivider\"></div>\r\n\r\n//             <div className=\"lowerPart\">\r\n//               <h2 className=\"points\">\r\n//                 Description :\r\n//                 <span className=\"fruitDetail\"> {fruitDetail.description}</span>\r\n//               </h2>\r\n//               <h2 className=\"points\">\r\n//                 Nutritional Information :\r\n//                 <span className=\"fruitDetail\">\r\n//                   <div className=\"nutrition\">\r\n//                     <div className=\"column\">\r\n//                       {fruitDetail?.nutritional_information &&\r\n//                         Object.entries(fruitDetail.nutritional_information)\r\n//                           .slice(\r\n//                             0,\r\n//                             Math.ceil(\r\n//                               Object.keys(fruitDetail.nutritional_information)\r\n//                                 .length / 2\r\n//                             )\r\n//                           )\r\n//                           .map(([key, value]) => (\r\n//                             <p key={key}>\r\n//                               {key}: {value}\r\n//                             </p>\r\n//                           ))}\r\n//                     </div>\r\n//                     <div className=\"column\">\r\n//                       {fruitDetail?.nutritional_information &&\r\n//                         Object.entries(fruitDetail.nutritional_information)\r\n//                           .slice(\r\n//                             Math.ceil(\r\n//                               Object.keys(fruitDetail.nutritional_information)\r\n//                                 .length / 2\r\n//                             )\r\n//                           )\r\n//                           .map(([key, value]) => (\r\n//                             <p key={key}>\r\n//                               {key}: {value}\r\n//                             </p>\r\n//                           ))}\r\n//                     </div>\r\n//                   </div>\r\n//                 </span>{\" \"}\r\n//               </h2>\r\n//               <h2 className=\"points\">\r\n//                 Health Benefits :\r\n//                 <span className=\"fruitDetail\">\r\n//                   {fruitDetail?.health_benefits &&\r\n//                     fruitDetail.health_benefits.map((health) => (\r\n//                       <p className=\"listvalues\">{health}</p>\r\n//                     ))}\r\n//                 </span>\r\n//               </h2>\r\n//               <h2 className=\"points\">\r\n//                 Seasonality :\r\n//                 <span className=\"fruitDetail\"> {fruitDetail.seasonality} </span>\r\n//               </h2>\r\n//               <h2 className=\"points\">\r\n//                 Allergenicity :\r\n//                 <span className=\"fruitDetail\">{fruitDetail.allergenicity}</span>\r\n//               </h2>\r\n//               <h2 className=\"points\">\r\n//                 Current price :\r\n//                 <span className=\"fruitDetail\"> {fruitDetail.price} </span>\r\n//               </h2>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <RightLeaves count={3} />\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Results;\r\n\r\nimport React, { useState,useEffect } from \"react\";\r\nimport Heading from \"../Components/Heading\";\r\nimport { LeftLeaves, RightLeaves } from \"../Components/Leaves\";\r\nimport { fruitsInfo } from \"../Components/dataJSON/fruitsInfo\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Results = () => {\r\n  const location = useLocation();\r\n  const fruitname = location.state?.fruitname || \"\";\r\n  const [fruitDetail, setFruitDetail] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fruit = fruitsInfo.find((fruit) => fruit.fruitName === fruitname);\r\n\r\n    if (fruit) {\r\n      setFruitDetail(fruit);\r\n      console.log(\"fruit : \", fruit);\r\n    }\r\n  }, [fruitname]);\r\n  console.log(\"fruit detail : \", fruitDetail);\r\n  console.log(\"fruitname : \", fruitname);\r\n\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchImage();\r\n\r\n    // Attach event listener for beforeunload event\r\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n\r\n    // Clean up the event listener when component unmounts\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n    };\r\n  }, []);\r\n\r\n  const handleBeforeUnload = async () => {\r\n    // Make a request to clear the uploads folder\r\n    try {\r\n      await fetch(\"http://localhost:5000/clear-uploads-folder\", {\r\n        method: \"POST\",\r\n      });\r\n      console.log(\"Uploads folder cleared successfully.\");\r\n    } catch (error) {\r\n      console.error(\"Failed to clear uploads folder:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchImage = () => {\r\n    fetch(\"http://localhost:5000/images\") // Replace with your Flask backend URL\r\n      .then((response) => response.json())\r\n      .then((data) => setImageUrl(data.image_url))\r\n      .catch((error) => console.error(error));\r\n  };\r\n\r\n  console.log(\"imgurl res : \", imageUrl);\r\n\r\n  return (\r\n        <>\r\n          <div className=\"content\">\r\n            <LeftLeaves count={3} />\r\n            <div className=\"resultContainer\">\r\n              <Heading title=\"Results\" />\r\n              <div className=\"resultBox\">\r\n                <div className=\"upperPart\">\r\n                  <img\r\n                    className=\"fruitimg\"\r\n                    src={`uploads/${imageUrl}`}\r\n                    alt=\"Recent Processed Image\"\r\n                  />\r\n                  <div className=\"generalInfo\">\r\n                    <h2 className=\"points\">\r\n                      Name :\r\n                      <span className=\"fruitDetail\"> {fruitDetail.fruitName}</span>\r\n                    </h2>\r\n                    <h2 className=\"points\">\r\n                      Binomial name :\r\n                      <span className=\"fruitDetail\">\r\n                        {fruitDetail.Binomial_Name}\r\n                      </span>\r\n                    </h2>\r\n                    <h2 className=\"points\">\r\n                      Genus :\r\n                      <span className=\"fruitDetail\"> {fruitDetail.genus} </span>\r\n                    </h2>\r\n                    <h2 className=\"points\">\r\n                      Family :\r\n                      <span className=\"fruitDetail\"> {fruitDetail.family} </span>\r\n                    </h2>\r\n                    <h2 className=\"points\">\r\n                      Origin :\r\n                      <span className=\"fruitDetail\"> {fruitDetail.origin} </span>\r\n                    </h2>\r\n                    <h2 className=\"points\">\r\n                      Category :\r\n                      <span className=\"fruitDetail\"> {fruitDetail.fruitType} </span>\r\n                    </h2>\r\n                  </div>\r\n                </div>\r\n                <div className=\"lineDivider\"></div>\r\n    \r\n                <div className=\"lowerPart\">\r\n                  <h2 className=\"points\">\r\n                    Description :\r\n                    <span className=\"fruitDetail\"> {fruitDetail.description}</span>\r\n                  </h2>\r\n                  <h2 className=\"points\">\r\n                    Nutritional Information :\r\n                    <span className=\"fruitDetail\">\r\n                      <div className=\"nutrition\">\r\n                        <div className=\"column\">\r\n                          {fruitDetail?.nutritional_information &&\r\n                            Object.entries(fruitDetail.nutritional_information)\r\n                              .slice(\r\n                                0,\r\n                                Math.ceil(\r\n                                  Object.keys(fruitDetail.nutritional_information)\r\n                                    .length / 2\r\n                                )\r\n                              )\r\n                              .map(([key, value]) => (\r\n                                <p key={key}>\r\n                                  {key}: {value}\r\n                                </p>\r\n                              ))}\r\n                        </div>\r\n                        <div className=\"column\">\r\n                          {fruitDetail?.nutritional_information &&\r\n                            Object.entries(fruitDetail.nutritional_information)\r\n                              .slice(\r\n                                Math.ceil(\r\n                                  Object.keys(fruitDetail.nutritional_information)\r\n                                    .length / 2\r\n                                )\r\n                              )\r\n                              .map(([key, value]) => (\r\n                                <p key={key}>\r\n                                  {key}: {value}\r\n                                </p>\r\n                              ))}\r\n                        </div>\r\n                      </div>\r\n                    </span>{\" \"}\r\n                  </h2>\r\n                  <h2 className=\"points\">\r\n                    Health Benefits :\r\n                    <span className=\"fruitDetail\">\r\n                      {fruitDetail?.health_benefits &&\r\n                        fruitDetail.health_benefits.map((health) => (\r\n                          <p className=\"listvalues\">{health}</p>\r\n                        ))}\r\n                    </span>\r\n                  </h2>\r\n                  <h2 className=\"points\">\r\n                    Seasonality :\r\n                    <span className=\"fruitDetail\"> {fruitDetail.seasonality} </span>\r\n                  </h2>\r\n                  <h2 className=\"points\">\r\n                    Allergenicity :\r\n                    <span className=\"fruitDetail\">{fruitDetail.allergenicity}</span>\r\n                  </h2>\r\n                  <h2 className=\"points\">\r\n                    Current price :\r\n                    <span className=\"fruitDetail\"> {fruitDetail.price} </span>\r\n                  </h2>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <RightLeaves count={3} />\r\n          </div>\r\n        </>\r\n      );\r\n};\r\n\r\nexport default Results;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,UAAU,EAAEC,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,UAAU,QAAQ,mCAAmC;AAC9D,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAAA;AAE/C,MAAMC,OAAO,GAAG,MAAM;EAAA;EAAA;EACpB,MAAMC,QAAQ,GAAGF,WAAW,EAAE;EAC9B,MAAMG,SAAS,GAAG,oBAAAD,QAAQ,CAACE,KAAK,oDAAd,gBAAgBD,SAAS,KAAI,EAAE;EACjD,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAGR,UAAU,CAACS,IAAI,CAAED,KAAK,IAAKA,KAAK,CA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}